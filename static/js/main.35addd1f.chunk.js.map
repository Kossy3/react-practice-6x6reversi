{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Stone","props","react_default","a","createElement","className","colorIndex","onClick","Board","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","index","_this","placeableBoard","App_Stone","_this2","board","Array","fill","map","v","i","j","renderStone","React","Component","App","_React$Component2","_this3","call","state","turn","color","isPlaceable","forEach","vec","point","_this4","slice","putStoneTest","setState","setTimeout","cpu","testBoard","getPlaceableBoard","includes","_this5","evalBoard","filter","length","reduce","sum","cpuColor","_this6","result","test","depth","score","cpuEval","move","concat","console","log","putStone","_this7","gameInfo","black","white","winner","showWinner","nextTurn","App_Board","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","dist","basename","process","react_router_dist","path","element","src_App_0"],"mappings":"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","file":"static/js/main.35addd1f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n//石の描画\nconst Stone = (props) => {\n  //クラス名のリスト\n  const stones = [\n    'Stone white',\n    'noStone',\n    'Stone black',\n  ]\n  return (\n    <button\n      className={stones[props.colorIndex]}\n      onClick={props.onClick}\n    >\n    </button>\n\n  );\n}\n\n//盤の作成\nclass Board extends React.Component {\n  //石とマスの描画\n  renderStone(value, index) {\n    return (\n      <div\n        key={index}\n        className={'square' + (this.props.placeableBoard[index] ? ' placeable' : '')}\n      >\n        <Stone\n          colorIndex={value + 1}\n          onClick={() => this.props.onClick(index)}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    let board = Array(6).fill(0).map((v, i) => {\n      i++;\n      return (\n        <div className='board-row' key={i}>\n          {Array(6).fill(0).map((v, j) => {\n            j++;\n            let index = i * 8 + j;\n            let value = this.props.board[index];\n            return this.renderStone(value, index);\n          })}\n        </div>);\n    });\n    return (\n      <div className='board'>\n        {board}\n      </div>);\n\n  }\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      //盤の初期化 2:外枠, 1:黒, -1:白, 0:空\n      board: [\n        2, 2, 2, 2, 2, 2, 2, 2,\n        2, 0, 0, 0, 0, 0, 0, 2,\n        2, 0, 0, 0, 0, 0, 0, 2,\n        2, 0, 0,-1, 1, 0, 0, 2,\n        2, 0, 0, 1,-1, 0, 0, 2,\n        2, 0, 0, 0, 0, 0, 0, 2,\n        2, 0, 0, 0, 0, 0, 0, 2,\n        2, 2, 2, 2, 2, 2, 2, 2\n      ],\n      //順番 1:黒, -1:白\n      turn: 1,\n    };\n  }\n  \n  //石が置けるかの確認\n  //置ける場合は引数のboardの反転部分を書き換え（置いた場所への代入はしない）\n  // isPlaceble　返値 置けるかどうか\n  putStoneTest(board, i, color) {\n    let isPlaceable = false;\n    const vectors = [9, 8, 7, 1, -1, -7, -8, -9];\n    if (board[i] !== 0) {\n      return isPlaceable;\n    }\n    vectors.forEach(vec => {\n      let point = i + vec;\n      if (board[point] === color) {\n        return;\n      }\n      while (board[point] === -color) {\n        point += vec;\n      }\n      if (board[point] === color) {\n        isPlaceable = true;\n        point -= vec;\n        while (point + vec !== i) {\n          board[point] *= -1\n          point -= vec;\n        }\n      }\n    });\n    return isPlaceable;\n  }\n\n  //石を置く処理　置けない場合は早期リターン\n  //ターンの交代も含む\n  putStone(i) {\n    let board = this.state.board.slice();\n    let isPlaceable = this.putStoneTest(board, i, this.state.turn);\n    if (!isPlaceable) {\n      return;\n    }\n    board[i] = this.state.turn;\n    let turn = this.state.turn;\n    turn = -turn;\n    this.setState({\n      board: board,\n      turn: turn,\n    });\n\n    //パス判定\n    if (!this.isPlaceable(board, turn)) {\n      turn = -turn;\n      this.setState({\n        board: board,\n        turn: turn,\n      });\n    }\n    //CPUの番ならcpuを呼ぶ\n    //レンダリング猶予100ms\n    if (turn === -1){\n      setTimeout(() => this.cpu(-1), 100);\n    }\n  }\n\n  //盤面全体を確認して、置ける場所があるかどうかを返す関数\n  isPlaceable(board, color) {\n    let testBoard = board.slice();\n    const placeableBoard = this.getPlaceableBoard(testBoard, color);\n    const placeable = placeableBoard.includes(true);\n    return placeable;\n  }\n\n  //盤面全体の置ける場所をtrue, 置けない場所をfalseのリストで返す関数\n  getPlaceableBoard(board, color) {\n    const placeableBoard = board.map((value, index) => {\n      let testBoard = board.slice();\n      return this.putStoneTest(testBoard, index, color);\n    });\n    return placeableBoard;\n  }\n\n  //cpu用　評価関数\n  cpuEval(board, color) {\n    const evalBoard = [\n      2,  2,  2,  2,  2,  2,  2,  2,\n      2, 30,-10,  0,  0,-10, 30,  2,\n      2,-10,-15, -5, -5,-15,-10,  2,\n      2, -3, -5, -1, -1, -5, -3,  2,\n      2, -3, -5, -1, -1, -5, -3,  2,\n      2,-10,-15, -5, -5,-15,-10,  2,\n      2, 30,-10, -3, -3,-10, 30,  2,\n      2,  2,  2,  2,  2,  2,  2,  2\n    ];\n    const turn = 36 - board.filter(function (value) {\n      return value === 0;\n    }).length;\n    const result = board.map((v, i)=>{\n      if(v === color) {\n        return evalBoard[i] + turn/2;\n      } else {\n        return 0;\n      }\n    });\n    const score =  result.reduce((sum, value) => sum + value, 0);\n    return score;\n  }\n\n  //cpu処理\n  cpu(cpuColor){\n    const maxScore = 1000; //mini-max用 評価の最大値\n    const minScore = -1000; //mini-max用 評価の最小値\n    const limitDepth = 4; //探索の最大深度\n    const initBoard = this.state.board;\n    const initColor = this.state.turn;\n\n    //探索用再帰関数\n    const test = (board, color, depth) => {\n      //最深部到達で即スコア返す\n      if (limitDepth === depth){\n        return {\n          score: this.cpuEval(board, color),\n          move: [],\n        };\n      }\n      //手番の保存\n      let move = [];\n      //mini-max用のスコア保存変数を初期化\n      let score = 0;\n      if (color === cpuColor) {\n        score = minScore;\n      }\n      if (-color === cpuColor) {\n        score = maxScore;\n      }\n      //盤面を総当たりで置ける場所を探して処理\n      for (let i=0; i<64; i++) {\n        if(board[i] === 2){\n          continue;\n        }\n        let testBoard = board.slice();\n        const placeable = this.putStoneTest(testBoard, i, color);\n        if (placeable) {\n          //置ける場所があった場合の処理\n          testBoard[i] = color;\n          //再帰\n          let result = test(testBoard, -color, depth + 1);\n          // mini-max\n          //自分の番は最大値をとる\n          if (color === cpuColor && result.score > score) {\n            score = result.score;\n            move = [i].concat(result.move);\n          }\n          //相手の番は最小値をとる\n          if (-color === cpuColor && result.score < score) {\n            score = result.score;\n            move = [i].concat(result.move);\n          }\n        }\n      }\n      //評価と手番を返す\n      return {\n        score,\n        move,\n      }\n    }\n    //最善手を打つ\n    let result = test(initBoard, initColor, 0);\n    console.log(result);\n    this.putStone(result.move[0]);\n  }\n\n  render() {\n    //ゲームの情報をオブジェクトで保存\n    let gameInfo = {\n      //black, white : それぞれの石の数\n      black: this.state.board.filter(function (value) {\n        return value === 1;\n      }).length,\n      white: this.state.board.filter(function (value) {\n        return value === -1;\n      }).length,\n      //winner : 勝者\n      winner: null,\n    }\n\n    //決着判定\n    if (\n      !this.isPlaceable(this.state.board, this.state.turn) &&\n      !this.isPlaceable(this.state.board, -this.state.turn)) {\n      if (gameInfo.black > gameInfo.white) {\n        gameInfo.winner = 1;\n      } else if (gameInfo.black < gameInfo.white) {\n        gameInfo.winner = -1;\n      } else {\n        gameInfo.winner = 0;\n      }\n    }\n\n    //決着の表示\n    const showWinner = (\n      <div className='game-info'>\n        <p>{gameInfo.black + \" - \" + gameInfo.white + (gameInfo.winner === 0 ? \" Draw\" : \" Winner\")}</p>\n        {gameInfo.winner === 0 ? null : (\n          <Stone\n            colorIndex={gameInfo.winner + 1}\n            isPlaceable={false}\n            onClick={() => undefined}\n          />)}\n      </div>\n    );\n\n    //ゲーム中の表示\n    const nextTurn = (\n      <div className='game-info'>\n        <p>{gameInfo.black + \" - \" + gameInfo.white + \" Turn\"}</p>\n        <Stone\n          colorIndex={this.state.turn + 1}\n          isPlaceable={false}\n          onClick={() => undefined}\n        />\n      </div>\n    );\n\n    const placeableBoard = this.getPlaceableBoard(this.state.board, this.state.turn);\n\n    return (\n      <div className=\"App\">\n        {gameInfo.winner === null ? nextTurn : showWinner}\n        <div className=\"game-board\">\n          <Board\n            board={this.state.board}\n            placeableBoard={placeableBoard}\n            onClick={(i) => this.putStone(i)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, Routes, Route} from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Routes>\n        <Route  path='/'  element={<App />} />\n        <Route  path='/about' element={<App/>}/>\n        <Route  path='/works' element={<App/>}/>\n        <Route  path='/contact' element={<App/>}/>\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}